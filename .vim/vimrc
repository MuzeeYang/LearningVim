"source ~/.vim/.earthmelon.vim
syntax on
set mouse=n
set hlsearch nowrapscan scrolloff=7 number smartindent tabstop=4 softtabstop=4 shiftwidth=4 "expandtab 
set fileencodings=ucs-bom,utf-8,cp20932,cp51932,cp932,cp20936,cp51936,cp54936,cp936,cp950,latin1
let mapleader="`"

"set auto pair
:vnoremap () c()<esc>hpl
:vnoremap [] c[]<esc>hpl
:vnoremap "" c""<esc>hpl
:vnoremap {} c{}<esc>hpl
:vnoremap '' c''<esc>hpl
:vnoremap <> c<><esc>hpl
:vnoremap {{ c{<cr>}<esc>P

"save file
:nnoremap <leader>s :call SaveFile()<cr>

"set tab to compeletion
:inoremap <tab> <c-r>=TabComplete()<cr>
:inoremap <leader><tab> <tab>
:nnoremap <tab> <c-w>w
:vnoremap <tab> >

"space select
:nnoremap <space> viw
:vnoremap <space> e
:inoremap <leader><space> <c-r>=EmptyPairsJmp()<cr>

"sys clipboard
:vnoremap <leader>p "+p
:nnoremap <leader>p "+p
:nnoremap <leader>P "+P

"search highlight
:vnoremap f "fy:call FindSearchItem()<cr>

"set fold
:set foldmethod=syntax
:set nofoldenable
:nnoremap <F4> :set foldenable!<cr>:set foldenable?<cr>
:nnoremap = zo
:nnoremap - zc
:nnoremap + zO
:nnoremap _ zC

"reload
:nnoremap <F5> :call ReloadFile()<cr>
:nnoremap <F6> :call UpdateCscope()<cr>

"ctags
:nnoremap <leader>] <c-]> 
:nnoremap <leader>[ <c-t> 

"taglist
:let Tlist_Auto_Open=0
:let Tlist_Show_One_File=1
:let Tlist_Use_Right_Window=0
:let Tlist_Exit_OnlyWindow=1
:let Tlist_Process_File_Always=1
:nnoremap <F3> :TlistToggle<cr>

"switch upper/lower
:inoremap <leader>~ <esc>viw~ea

"scroll page
:nnoremap , <c-w>7<
:nnoremap . <c-w>7>
:nnoremap <c-j> <c-d>
:nnoremap <c-k> <c-u>
:nnoremap <c-h> <c-w>h
:nnoremap <c-l> <c-w>l
:inoremap <c-h> <left>
:inoremap <c-l> <right>
:inoremap <c-j> <down>
:inoremap <c-k> <up>

"others
:nnoremap U <c-r>
:nnoremap S cw
:inoremap <leader><leader> `


"status line
set cursorline
set laststatus=2
set statusline=%1*\ %f%h%r%m\ %*\ %<[%{&ft}][%{&ff}]%=%l,%02c%7p%%\ 
hi	user1				term=bold			cterm=bold
hi	user1				ctermfg=white		ctermbg=red
hi	statuslinenc		term=bold			cterm=bold
hi	statuslinenc		ctermfg=black		ctermbg=grey
hi	statusline			term=bold			cterm=bold
hi	statusline			ctermfg=black		ctermbg=white

augroup colors_earthmelon
	:autocmd!
	:autocmd InsertEnter * :execute ":hi user1 ctermfg=white ctermbg=darkblue"
	:autocmd InsertLeave * :execute ":hi user1 ctermfg=white ctermbg=red"
augroup end

"autocmd
augroup auto_buffer
	:autocmd!
	:autocmd filetype c,cpp :call CLangSetting()
	:autocmd bufreadpre,bufnewfile * :source ~/.vim/syntax/common.vim
	:autocmd bufreadpost,bufread * :normal! '"
	":autocmd TextChanged,TextChangedI * :let g:LNO = -1
	":autocmd TextYankPost * :call LetSysClib()
augroup end

"Functions
function! TabComplete()
	let s:lineStr = getline('.')
	let s:posCur = col('.')

	if s:posCur == len(s:lineStr) + 1 "pos at the end
		let s:endKeyWord = match(s:lineStr, "[0-9a-zA-Z_]$", s:posCur - 2)
	else
		let s:endKeyWord = match(s:lineStr, "[0-9a-zA-Z_][^0-9a-zA-Z_]", s:posCur - 2)
	endif
	if s:endKeyWord != -1
		if s:endKeyWord == s:posCur - 2
			return "\<c-n>"
		endif
	endif
	return "\<tab>"

endfunction

function! EmptyPairsJmp()
	let s:startSearch = col('.')
	let s:lineSearch = getline('.')
	let s:rangeSearch = len(s:lineSearch)
	if s:startSearch > s:rangeSearch
		let s:startSearch = 1
	endif

	let s:pattenPairs = '()\|[]\|{}\|""\|<>\|'''''
	let s:startSearch = match(s:lineSearch,s:pattenPairs,s:startSearch - 1)
	if s:startSearch != -1
		call cursor(0,s:startSearch + 1)
	else
		call cursor(0,s:rangeSearch + 1)
	endif
	return "\<right>"
endfunction

function! FindSearchItem()
	let @/=@f
endfunction

function! SaveFile()
	if &readonly == 1 "readonly
		let s:isSaveForce = input("This file is [RO], SAVE it by force or not (y/n)?")
		if s:isSaveForce == 'y'
			:w !sudo tee % >/dev/null
		endif
	else "noreadonly
		:w
	endif
endfunction

function! ReloadFile()
	if &modified == 1 "modified
		let s:isModForce = input("This file is Modified, ABANDON it by force or not (y/n)?")
		if s:isModForce == 'y'
			:edit!
		endif
	else
		:edit
	endif
endfunction

function! LetSysClib()
	if len(@") != 1
		let @+ = @"
	endif
endfunction

function! CLangSetting()
	set cindent
	set tags=tags;,~/.vim/systags
	"cscope
	if has("cscope")
		:call AddCscope()
		nnoremap <leader>/s :cs find s <C-R>=expand("<cword>")<CR><CR>
		nnoremap <leader>/g :cs find g <C-R>=expand("<cword>")<CR><CR>
		nnoremap <leader>/d :cs find d <C-R>=expand("<cword>")<CR><CR>
		nnoremap <leader>/c :cs find c <C-R>=expand("<cword>")<CR><CR>
		nnoremap <leader>/t :cs find t <C-R>=expand("<cword>")<CR><CR>
		nnoremap <leader>/e :cs find e <C-R>=expand("<cword>")<CR><CR>
		nnoremap <leader>/f :cs find f <C-R>=expand("<cfile>")<CR><CR>
		nnoremap <leader>/i :cs find i <C-R>=expand("<cfile>")<CR><CR>

		nnoremap <leader>?s :scs find s <C-R>=expand("<cword>")<CR><CR>
		nnoremap <leader>?g :scs find g <C-R>=expand("<cword>")<CR><CR>
		nnoremap <leader>?d :scs find d <C-R>=expand("<cword>")<CR><CR>
		nnoremap <leader>?c :scs find c <C-R>=expand("<cword>")<CR><CR>
		nnoremap <leader>?t :scs find t <C-R>=expand("<cword>")<CR><CR>
		nnoremap <leader>?e :scs find e <C-R>=expand("<cword>")<CR><CR>
		nnoremap <leader>?f :scs find f <C-R>=expand("<cfile>")<CR><CR>
		nnoremap <leader>?i :scs find i <C-R>=expand("<cfile>")<CR><CR>
	endif
endfunction

function! AddCscope()
	set csprg=/usr/bin/cscope
	set csto=0
	set cst
	set nocsverb
	set cspc=3

	"add any database in current dir  
	if filereadable("cscope.out")
		cs add cscope.out
	"else search cscope.out elsewhere  
	else 
		let cscope_db=findfile("cscope.out",".;")
		let cscope_pre=matchstr(cscope_db,".*/")
		if !empty(cscope_db) && filereadable(cscope_db)
			exe "cs add" cscope_db cscope_pre
		endif
	endif
	set csverb
endfunction

function! UpdateCscope()
	if has("cscope")
		if filereadable("cscope.files")
			:cscope kill -1
			!find . -name "*.[c|h]" > cscope.files && cscope -bkqRU -i cscope.files
			:call AddCscope()
		else
			let cscope_files=findfile("cscope.files", ".;")
			let cscope_path=matchstr(cscope_files, ".*/")
			if !empty(cscope_files) && filereadable(cscope_files)  
				let current_path=getcwd()
				:cscope kill -1
				exe "chdir " cscope_path
				exe "!find . -name \"*.[c|h]\" > " cscope_files "&& cscope -bkqRU -i " cscope_files 
				exe "chdir " current_path
				:call AddCscope()
			endif
		endif
	endif
endfunction

"beta debug
:nnoremap <leader>rr :source $MYVIMRC<cr>
:nnoremap <leader>tt :call TestFunc()<cr>
iabbrev waht what
augroup autest
	:autocmd!
augroup end

